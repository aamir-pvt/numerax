import streamlit as st


def graphs():
    """Display the graphs that are generated by the backtest and explain what they represent."""
    st.title("Graphs")
    st.markdown("***")

    # Adding body text
    st.subheader("agents_plot")
    agent_plot_img, agent_plot_desc = st.columns([2, 1])
    with agent_plot_img:
        st.image("examples/agents.png")
    with agent_plot_desc:
        st.write(
            "Compares the performance of the RL ensemble to the SP500 over the designated trading period. The plot background is divided into each validation window, represented by the vertical lines where the agent could be switched to another agent. For example, the default setting is a validation period of 60 days, so there will be a vertical line every 60 days in that plot and thus the agent being used could be changed every 60 days. Ultimately, this plot allows for the comparison of each agents performance over time. The color scheme for each agent is defined as follows:",
        )

        st.write(
            """
        - Green = DDPG
        - Blue = A2C
        - Pink = TD3
        - Yellow = SAC
        - Red = PPO
        """
        )

    st.subheader("full_comparison_plot:")
    full_comp_img, full_comp_desc = st.columns([2, 1])
    with full_comp_img:
        st.image("examples/full_comparison.png")
    with full_comp_desc:
        st.write(
            """Compares the performance of the RL ensemble to the SP500 over the designated trading period, alongside the HRP and HERC weightings of the same input portfolio. This allows for a more comprehensive comparison of the RL ensemble with the same portfolio using a different and static weighting scheme (HRP and HERC). """
        )

    st.subheader("tailDistribution:")
    tail_img, tail_desc = st.columns([2, 1])
    with tail_img:
        st.image("examples/skew.png")
    with tail_desc:
        st.write(
            """Demonstrates the overall skew of the input portfolio, showing whether the DoD % change of the portfolio is positively or negatively skewed. Testing has shown that portfolios leaning to the right, where the positive DoD % changes are larger than the negative DoD% changes will perform better with the Reinforcement Learning Ensemble."""
        )
        st.write(
            """
        - Blue line = Entire range of returns, from minimum to maximum
        - Purple Line = Tail Gini Range, which is the 95% confidence of interval portfolio returns on both the positive and negative end.
        - Green Line = Conditional Value at Risk, which is the 95% confidence interval of only negative returns.
        """
        )
    st.subheader("weights:")
    weights_img, weights_desc = st.columns([2, 1])
    with weights_img:
        st.image("examples/weights.png")
    with weights_desc:
        st.write(
            """Displays the portfolio weights of the RL ensemble over the designated trading period. The pie chart shows the percentage of the portfolio that is allocated to each stock. The table below the pie chart shows the percentage of the portfolio that is allocated to each stock at the end of the trading period."""
        )

    st.subheader("stock_performance:")
    stock_img, stock_desc = st.columns([2, 1])
    with stock_img:
        st.image("examples/best_worst_performers.png")
    with stock_desc:
        st.write(
            """Plots the top 5 and bottom 5 performing stocks for each validation period. Performance is calculated as the return percentage from the average buy price to the last price of that stock in the trading period. Average buy price is calculated as the weighted average of the buy prices, starting from the date of the first buy. Thus, each trade will either increase or decrease that average buy price, and the final returns are calculated using that average buy price of the time period."""
        )


def main():
    st.set_page_config(layout="wide")
    st.image("examples/logo.png")
    graphs()


if __name__ == "__main__":
    main()
